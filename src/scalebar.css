.dv-sb {
    --s: var(--scalebar-size, 14);
    --f: var(--label-font, calc(var(--bz) * 0.9) monospace);
    --f0: var(--label-font0, var(--f));
    --f1: var(--label-font1, var(--f0));

    --sz: var(--container-size, calc(var(--s) * 2px));
    --bz: var(--bar-size, calc(var(--sz) / 2));

    --bo: var(--bar-offset);

    --tc: var(--tick-color, currentColor);
    --tc0: var(--tick-color0, var(--tc));
    --tc1: var(--tick-color1, var(--tc0));

    --tw: var(--tick-width, 2px);
    --tw0: var(--tick-width0, var(--tw));
    --tw1: var(--tick-width1, var(--tw0));

    --ts: var(--tick-size, var(--s));
    --ts0: var(--tick-size0, calc(var(--ts) * 1.7));
    --ts1: var(--tick-size1, var(--ts0));

    --to: var(--tick-offset, 0px);
    --to0: var(--tick-offset0, var(--to));
    --to1: var(--tick-offset1, var(--to0));
    
    --tb: var(--tick-blend, normal);
    --tb0: var(--tick-blend0, var(--tb));
    --tb1: var(--tick-blend1, var(--tb0));

    --lc: var(--label-color, currentColor);
    --lc0: var(--label-color0, var(--lc));
    --lc1: var(--label-color1, var(--lc0));

    --lo: var(--label-offset, var(--bz));
    --lo0: var(--label-offset0, var(--lo));
    --lo1: var(--label-offset1, var(--lo0));

    --li: var(--label-indent, 0px);
    --li0: var(--label-indent0, var(--li));
    --li1: var(--label-indent1, calc(var(--li0) * -1));

    --lb: var(--label-blend, normal);
    --lb0: var(--label-blend0, var(--lb));
    --lb1: var(--label-blend1, var(--lb0));

    --_: calc(var(--sz) - var(--bz));
    --_to: calc((var(--to)*-1) + (var(--sz) - var(--ts)*1px));
    --_to0: calc((var(--to0)*-1) + (var(--sz) - var(--ts0)*1px));
    --_to1: calc((var(--to1)*-1) + (var(--_to0)));

}

svg {
    display: block;
    overflow: visible;
    
    width: 100%;
    height: var(--sz);

    rect {
        width: 100%;
        height: var(--bz);
        transform: translateY(var(--bo));

        &.b {
            transform: translateX(calc(var(--bz)*-1));
        }
    }

    &.f rect {
        transform: translateY(var(--bo, var(--_)));
    }

    &.v {
        width: var(--sz);
        height: 100%;

        rect {
            width: var(--bz);
            height: 100%;
            transform: translateX(var(--bo));

            &.b {
                transform: translateY(calc(var(--bz)*-1));
            }
        }
    }

    &.f.v rect {
        transform: translateX(var(--bo, var(--_)))
    }

    rect {

        &.b,
        &.a {
            height: var(--bz);
            width: var(--bz);
        }
    }

    use {
        stroke: var(--tc);
        stroke-width: var(--tw);
        mix-blend-mode: var(--tb);

        &:first-of-type {
            stroke: var(--tc0);
            stroke-width: var(--tw0);
            mix-blend-mode: var(--tb0);
        }

        &:last-of-type {
            stroke: var(--tc1);
            stroke-width: var(--tw1);
            mix-blend-mode: var(--tb1);
        }

        transform: translateY(var(--to)) scaleY(var(--ts));

        &:last-of-type {
            transform: translateY(var(--to1)) scaleY(var(--ts1));
        }

        &:first-of-type {
            transform: translateY(var(--to0)) scaleY(var(--ts0));
        }
    }

    &.f use {
        transform: translateY(var(--_to)) scaleY(var(--ts));

        &:last-of-type {
            transform: translateY(var(--_to1)) scaleY(var(--ts1));
        }

        &:first-of-type {
            transform: translateY(var(--_to0)) scaleY(var(--ts0));
        }
    }

    &.v use {
        transform: translateX(var(--to)) scaleX(var(--ts));

        &:last-of-type {
            transform: translateX(var(--to1)) scaleX(var(--ts1));
        }

        &:first-of-type {
            transform: translateX(var(--to0)) scaleX(var(--ts0));
        }
    }

    &.v.f use {
        transform: translateX(var(--_to)) scaleX(var(--ts));

        &:last-of-type {
            transform: translateX(var(--_to1)) scaleX(var(--ts1));
        }

        &:first-of-type {
            transform: translateX(var(--_to0)) scaleX(var(--ts0));
        }
    }

    text {
        font: var(--f);
        fill: var(--lc);
        mix-blend-mode: var(--lb);

        &:last-of-type {
            font: var(--f1);
            fill: var(--lc1);
            mix-blend-mode: var(--lb1);
        }

        &:first-of-type {
            font: var(--f0);
            fill: var(--lc0);
            mix-blend-mode: var(--lb0);
        }
    }

    &.h {
        text {
            text-anchor: middle;
            dominant-baseline: text-before-edge;
            transform: translate(var(--li), var(--lo));

            &:last-of-type {
                transform: translate(calc(var(--li1) - .3em), var(--lo1))
            }

            &:first-of-type {
                transform: translate(calc(var(--li0) + .3em), var(--lo0))
            }
        }

        &:not(.c) {
            text {
                &:last-of-type {
                    text-anchor: end;
                }

                &:first-of-type {
                    text-anchor: start;
                }
            }
        }

        &.f text {
            dominant-baseline: text-after-edge;
        }
    }

    &.v {
        text {
            text-anchor: start;
            dominant-baseline: central;
            transform: translate(calc(var(--lo) + .3em), var(--li));

            &:last-of-type {
                transform: translate(calc(var(--lo) + .3em), calc(-1*var(--li1)))
            }

            &:first-of-type {
                transform: translate(calc(var(--lo) + .3em), calc(-1*var(--li0)))
            }
        }

        &:not(.c) {
            text {
                &:last-of-type {
                    dominant-baseline: text-before-edge;
                }

                &:first-of-type {
                    dominant-baseline: text-after-edge;
                }
            }

            &.f text {
                &:last-of-type {
                    transform: translate(calc(var(--lo) - .3em), calc(-1*var(--li1)))
                }

                &:first-of-type {
                    transform: translate(calc(var(--lo) - .3em), calc(-1*var(--li0)))
                }
            }
        }

        &.f text {
            text-anchor: end;
            transform: translate(calc(var(--lo) - .3em), var(--li))
        }
    }
}